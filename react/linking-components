{/* //-------CLIENT FOLDER------//
// index.TSX //
//(holds your one event listener to render your app page)
//-------------// */}

import { createRoot } from 'react-dom/client'

import App from './components/App'
import { BrowserRouter as Router } from 'react-router-dom'
{/* you dont have to rename BrowserRouter but convention and possibly some testing considerations recommend you should */}

document.addEventListener('DOMContentLoaded', () => {
  createRoot(document.getElementById('app') as HTMLElement).render(
    <Router>
      <App />
    </Router>
  )
})



//{/* //-------------//
// App.tsx //
//(Your main component that all components link into)
//-------------// */}

import Centre from './Centre'
import Home from './Home'

import { Route, Routes } from 'react-router-dom'

function App() {
  return (
    <>
      <Header />
      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/Centre" element={<Centre />} />
      </Routes>
      <Footer />
    </>
  )
}
export default App



{/* //-------------//
// App.tsx //
//(Your main component that all components link into)
//-------------// */}

import { useState, useEffect } from 'react'
import { useNavigate } from 'react-router-dom'

function Centre() {
  const [horizontal, setHorizontal] = useState(10)
  const [vertical, setVertical] = useState(200)
  const navigate = useNavigate()

  console.log(horizontal, vertical)


  //NB: not full function below - see xy-movement-component
  useEffect(() => {
    const handleKeyPress = (e) => {
      if (e.key === 'ArrowRight' && horizontal <= 430) {
        setHorizontal(horizontal + 10)
        {
          if (horizontal === 270 && vertical === 90) {
            console.log('fuck yeah')
            // ADD IN REDIRECT HERE
            navigate('/Shop')
          } else if (horizontal >= 410) {
            navigate('/East')
          }
        }
      }
    }
    document.addEventListener('keydown', handleKeyPress)

    return () => {
      document.removeEventListener('keydown', handleKeyPress)
    }
  }, [horizontal, vertical])

  return (
    <>
      <div className="centre-container">
   
        
      </div>
    </>
  )
}

export default Centre
